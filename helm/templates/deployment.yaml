apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "microservice.fullname" . }}
  labels:
    app: {{ template "microservice.name" . }}
    chart: {{ template "microservice.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: {{ template "microservice.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "microservice.name" . }}
        release: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.service.httpPort | default 80 }}"
    spec:
      terminationGracePeriodSeconds: 60
      nodeSelector:
        kubernetes.io/os: linux
      initContainers:
      - name: "{{ .Chart.Name }}-init"
        image: "groundnuty/k8s-wait-for:1.3"
        imagePullPolicy: IfNotPresent
        args: 
        - "job"
        - "{{ template "microservice.fullname" . }}-{{ .Release.Revision}}"        
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          envFrom:
          - configMapRef:
              name: {{ template "microservice.fullname" . }}
          ports:
            - name: http
              containerPort: {{ .Values.service.httpPort | default 80 }}
              protocol: TCP
          readinessProbe:
            httpGet:
                path: /health
                port: 80
                periodSeconds: 10
                failureThreshold: 1              
          livenessProbe:
            httpGet:
                path: /health
                port: 80
                periodSeconds: 10
                failureThreshold: 1
          startupProbe:
            httpGet:
                path: /health
                port: 80
            failureThreshold: 10
            periodSeconds: 10            
          resources:
{{ toYaml .Values.resources | indent 12 }}
